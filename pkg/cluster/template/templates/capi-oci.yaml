apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: "{{.ClusterConfig.Name}}"
  name: "{{.ClusterConfig.Name}}"
  namespace: "{{.ClusterConfig.Providers.Oci.Namespace}}"
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - {{.ClusterConfig.PodSubnet}}
    serviceDomain: "cluster.local"
    services:
      cidrBlocks:
        - {{.ClusterConfig.ServiceSubnet}}
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
    kind: OCICluster
    name: "{{.ClusterConfig.Name}}"
    namespace: "{{.ClusterConfig.Providers.Oci.Namespace}}"
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: "{{.ClusterConfig.Name}}-control-plane"
    namespace: "{{.ClusterConfig.Providers.Oci.Namespace}}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: OCICluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: "{{.ClusterConfig.Name}}"
  name: "{{.ClusterConfig.Name}}"
  namespace: "{{.ClusterConfig.Providers.Oci.Namespace}}"
spec:
  compartmentId: "{{.ClusterConfig.Providers.Oci.Compartment}}"
  networkSpec:
    vcn:
      name: "{{.ClusterConfig.Name}}"
      cidr: "10.0.0.0/16"
      subnets:
      - name: control-plane-endpoint
        role: control-plane-endpoint
        type: public
        cidr: "10.0.0.8/29"
      - name: service-lb
        role: service-lb
        type: public
        cidr: "10.0.0.32/27"
      - name: control-plane
        role: control-plane
        type: private
        cidr: "10.0.0.0/29"
      - name: worker
        role: worker
        type: private
        cidr: "10.0.64.0/20"
      networkSecurityGroup:
        list:
        - name: control-plane-endpoint
          role: control-plane-endpoint
          egressRules:
          - egressRule:
              description: Kubernetes API traffic to Control Plane
              destination: "10.0.0.0/29"
              destinationType: CIDR_BLOCK
              isStateless: false
              protocol: "6"
              tcpOptions:
                destinationPortRange:
                  max: 6443
                  min: 6443
          ingressRules:
          - ingressRule:
              description: External access to Kubernetes API endpoint
              isStateless: false
              protocol: "6"
              source: "0.0.0.0/0"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 6443
                  min: 6443
          - ingressRule:
              description: Path discovery
              icmpOptions:
                code: 4
                type: 3
              isStateless: false
              protocol: "1"
              source: "10.0.0.0/16"
              sourceType: CIDR_BLOCK
        - name: control-plane
          role: control-plane
          egressRules:
          - egressRule:
              description: Control Plane access to Internet
              destination: "0.0.0.0/0"
              destinationType: CIDR_BLOCK
              isStateless: false
              protocol: all
          ingressRules:
          - ingressRule:
              description: Kubernetes API endpoint to Control Plane(apiserver port)
                communication
              isStateless: false
              protocol: "6"
              source: "10.0.0.8/29"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 6443
                  min: 6443
          - ingressRule:
              description: Control plane node to Control Plane(apiserver port) communication
              isStateless: false
              protocol: "6"
              source: "10.0.0.0/29"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 6443
                  min: 6443
          - ingressRule:
              description: Worker Node to Control Plane(apiserver port) communication
              isStateless: false
              protocol: "6"
              source: "10.0.64.0/20"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 6443
                  min: 6443
          - ingressRule:
              description: etcd client communication
              isStateless: false
              protocol: "6"
              source: "10.0.0.0/29"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 2379
                  min: 2379
          - ingressRule:
              description: etcd peer
              isStateless: false
              protocol: "6"
              source: "10.0.0.0/29"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 2380
                  min: 2380
          - ingressRule:
              description: Calico networking (BGP)
              isStateless: false
              protocol: "6"
              source: "10.0.0.0/29"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 179
                  min: 179
          - ingressRule:
              description: Calico networking (BGP)
              isStateless: false
              protocol: "6"
              source: "10.0.64.0/20"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 179
                  min: 179
          - ingressRule:
              description: Calico networking with IP-in-IP enabled
              isStateless: false
              protocol: "4"
              source: "10.0.0.0/29"
              sourceType: CIDR_BLOCK
          - ingressRule:
              description: Calico networking with IP-in-IP enabled
              isStateless: false
              protocol: "4"
              source: "10.0.64.0/20"
              sourceType: CIDR_BLOCK
          - ingressRule:
              description: Path discovery
              icmpOptions:
                code: 4
                type: 3
              isStateless: false
              protocol: "1"
              source: "10.0.0.0/16"
              sourceType: CIDR_BLOCK
          - ingressRule:
              description: Inbound SSH traffic to Control Plane
              isStateless: false
              protocol: "6"
              source: "0.0.0.0/0"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 22
                  min: 22
          - ingressRule:
              description: Control Plane to Control Plane Kubelet Communication
              isStateless: false
              protocol: "6"
              source: "10.0.0.0/29"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 10250
                  min: 10250
          - ingressRule:
              description: Flannel networking
              isStateless: false
              protocol: "17"
              source: "10.0.64.0/20"
              sourceType: CIDR_BLOCK
              udpOptions:
                destinationPortRange:
                  min: 8472
                  max: 8472
          - ingressRule:
              description: Flannel networking
              isStateless: false
              protocol: "17"
              source: "10.0.0.0/29"
              sourceType: CIDR_BLOCK
              udpOptions:
                destinationPortRange:
                  min: 8472
                  max: 8472
        - name: worker
          role: worker
          egressRules:
          - egressRule:
              description: Worker node access to Internet
              destination: "0.0.0.0/0"
              destinationType: CIDR_BLOCK
              isStateless: false
              protocol: all
          ingressRules:
          - ingressRule:
              description: Inbound SSH traffic to worker node
              isStateless: false
              protocol: "6"
              source: "0.0.0.0/0"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 22
                  min: 22
          - ingressRule:
              description: Path discovery
              icmpOptions:
                code: 4
                type: 3
              isStateless: false
              protocol: "1"
              source: "10.0.0.0/16"
              sourceType: CIDR_BLOCK
          - ingressRule:
              description: Control Plane to worker node Kubelet Communication
              isStateless: false
              protocol: "6"
              source: "10.0.0.0/29"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 10250
                  min: 10250
          - ingressRule:
              description: Worker node to worker node Kubelet Communication
              isStateless: false
              protocol: "6"
              source: "10.0.64.0/20"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 10250
                  min: 10250
          - ingressRule:
              description: Calico networking (BGP)
              isStateless: false
              protocol: "6"
              source: "10.0.0.0/29"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 179
                  min: 179
          - ingressRule:
              description: Calico networking (BGP)
              isStateless: false
              protocol: "6"
              source: "10.0.64.0/20"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 179
                  min: 179
          - ingressRule:
              description: Calico networking with IP-in-IP enabled
              isStateless: false
              protocol: "4"
              source: "10.0.0.0/29"
              sourceType: CIDR_BLOCK
          - ingressRule:
              description: Calico networking with IP-in-IP enabled
              isStateless: false
              protocol: "4"
              source: "10.0.64.0/20"
              sourceType: CIDR_BLOCK
          - ingressRule:
              description: Worker node to default NodePort ingress communication
              isStateless: false
              protocol: "6"
              source: "10.0.64.0/20"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 32767
                  min: 30000
          - ingressRule:
              description: Flannel networking
              isStateless: false
              protocol: "17"
              source: "10.0.64.0/20"
              sourceType: CIDR_BLOCK
              udpOptions:
                destinationPortRange:
                  min: 8472
                  max: 8472
          - ingressRule:
              description: Flannel networking
              isStateless: false
              protocol: "17"
              source: "10.0.0.0/29"
              sourceType: CIDR_BLOCK
              udpOptions:
                destinationPortRange:
                  min: 8472
                  max: 8472
        - name: service-lb
          role: service-lb
          egressRules:
          - egressRule:
              description: Service LoadBalancer to default NodePort egress communication
              destination: "10.0.64.0/20"
              destinationType: CIDR_BLOCK
              isStateless: false
              protocol: "6"
              tcpOptions:
                destinationPortRange:
                  max: 32767
                  min: 30000
          ingressRules:
          - ingressRule:
              description: Path discovery
              icmpOptions:
                code: 4
                type: 3
              isStateless: false
              protocol: "1"
              source: "10.0.0.0/16"
              sourceType: CIDR_BLOCK
          - ingressRule:
              description: Accept http traffic on port 80
              isStateless: false
              protocol: "6"
              source: "0.0.0.0/0"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 80
                  min: 80
          - ingressRule:
              description: Accept https traffic on port 443
              isStateless: false
              protocol: "6"
              source: "0.0.0.0/0"
              sourceType: CIDR_BLOCK
              tcpOptions:
                destinationPortRange:
                  max: 443
                  min: 443
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "{{.ClusterConfig.Name}}-control-plane"
  namespace: "{{.ClusterConfig.Providers.Oci.Namespace}}"
spec:
  version: "{{.KubeVersions.Kubernetes}}"
  replicas: {{.ClusterConfig.ControlPlaneNodes}}
  machineTemplate:
    infrastructureRef:
      kind: OCIMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      name: "{{.ClusterConfig.Name}}-control-plane"
      namespace: "{{.ClusterConfig.Providers.Oci.Namespace}}"
  kubeadmConfigSpec:
    format: ignition
    ignition:
      variant: fcos
      version: 1.5.0
      containerLinuxConfig:
        additionalConfig: |
{{.ExtraConfig}}
    clusterConfiguration:
      kubernetesVersion: {{.KubeVersions.Kubernetes}}
      imageRepository: container-registry.oracle.com/olcne
      apiServer:
        certSANs: [localhost, 127.0.0.1]
        extraArgs:
          tls-cipher-suites: {{.CipherSuite}}
      dns:
        imageRepository: container-registry.oracle.com/olcne
        imageTag: {{.KubeVersions.CoreDNS}}
      etcd:
        local:
          imageRepository: container-registry.oracle.com/olcne
          imageTag: {{.KubeVersions.Etcd}}
          extraArgs:
            cipher-suites: {{.CipherSuite}}
      networking: {}
      controllerManager:
        extraArgs:
          tls-cipher-suites: {{.CipherSuite}}
      scheduler:
        extraArgs:
          tls-cipher-suites: {{.CipherSuite}}
    initConfiguration:
      nodeRegistration:
        criSocket: /var/run/crio/crio.sock
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: oci://{{"{{ ds[\"id\"] }}"}}
          volume-plugin-dir: "{{.VolumePluginDir}}"
          tls-cipher-suites: {{.CipherSuite}}
    joinConfiguration:
      discovery: {}
      nodeRegistration:
        criSocket: /var/run/crio/crio.sock
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: oci://{{"{{ ds[\"id\"] }}"}}
          volume-plugin-dir: "{{.VolumePluginDir}}"
          tls-cipher-suites: {{.CipherSuite}}
---
kind: OCIMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
metadata:
  name: "{{.ClusterConfig.Name}}-control-plane"
  namespace: "{{.ClusterConfig.Providers.Oci.Namespace}}"
spec:
  template:
    spec:
      imageId: "{{shapeImage .ClusterConfig.Providers.Oci.ControlPlaneShape.Shape .ClusterConfig.Providers.Oci.Images}}"
      compartmentId: "{{.ClusterConfig.Providers.Oci.Compartment}}"
      shape: "{{.ClusterConfig.Providers.Oci.ControlPlaneShape.Shape}}"
      shapeConfig:
        ocpus: "{{.ClusterConfig.Providers.Oci.ControlPlaneShape.Ocpus}}"
      metadata:
        ssh_authorized_keys: "{{.ClusterConfig.SshPublicKey}}"
      isPvEncryptionInTransitEnabled: false
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: OCIMachineTemplate
metadata:
  name: "{{.ClusterConfig.Name}}-md-0"
  namespace: "{{.ClusterConfig.Providers.Oci.Namespace}}"
spec:
  template:
    spec:
      imageId: "{{shapeImage .ClusterConfig.Providers.Oci.WorkerShape.Shape .ClusterConfig.Providers.Oci.Images}}"
      compartmentId: "{{.ClusterConfig.Providers.Oci.Compartment}}"
      shape: "{{.ClusterConfig.Providers.Oci.WorkerShape.Shape}}"
      shapeConfig:
        ocpus: "{{.ClusterConfig.Providers.Oci.WorkerShape.Ocpus}}"
      metadata:
        ssh_authorized_keys: "{{.ClusterConfig.SshPublicKey}}"
      isPvEncryptionInTransitEnabled: false
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "{{.ClusterConfig.Name}}-md-0"
  namespace: "{{.ClusterConfig.Providers.Oci.Namespace}}"
spec:
  template:
    spec:
      format: ignition
      ignition:
        variant: fcos
        version: 1.5.0
        containerLinuxConfig:
          additionalConfig: |
{{.ExtraConfig}}
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: oci://{{"{{ ds[\"id\"] }}"}}
            volume-plugin-dir: "{{.VolumePluginDir}}"
            tls-cipher-suites: {{.CipherSuite}}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "{{.ClusterConfig.Name}}-md-0"
  namespace: "{{.ClusterConfig.Providers.Oci.Namespace}}"
spec:
  clusterName: "{{.ClusterConfig.Name}}"
  replicas: {{.ClusterConfig.WorkerNodes}}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "{{.ClusterConfig.Name}}"
      version: "{{.KubeVersions.Kubernetes}}"
      bootstrap:
        configRef:
          name: "{{.ClusterConfig.Name}}-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "{{.ClusterConfig.Name}}-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
        kind: OCIMachineTemplate

