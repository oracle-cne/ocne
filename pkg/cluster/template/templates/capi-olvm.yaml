apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: "{{.ClusterConfig.Name}}"
  name: "{{.ClusterConfig.Name}}"
  namespace: "{{.ClusterConfig.Providers.Olvm.Namespace}}"
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - {{.PodSubnetCidrBlocks}}
    serviceDomain: "cluster.local"
    services:
      cidrBlocks:
        - {{.ServiceSubnetCidrBlocks}}
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1
    kind: OLVMCluster
    name: "{{.ClusterConfig.Name}}"
    namespace: "{{.ClusterConfig.Providers.Olvm.Namespace}}"
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: "{{.ClusterConfig.Name}}-control-plane"
    namespace: "{{.ClusterConfig.Providers.Olvm.Namespace}}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1
kind: OLVMCluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: "{{.ClusterConfig.Name}}"
  name: "{{.ClusterConfig.Name}}"
  namespace: "{{.ClusterConfig.Providers.Olvm.Namespace}}"
spec:
  olvmDatacenterName: "{{.ClusterConfig.Providers.Olvm.DatacenterName}}"
  controlPlaneEndpoint:
    host: "{{.ClusterConfig.VirtualIp}}"
    port: {{.Config.KubeAPIServerBindPort}}
  olvmOvirtAPIServer:
    caConfigMapName:
      name: ".ClusterConfig.Providers.Olvm.OlvmAPIServer.CAConfigMap.Name}}"
      namespace: ".ClusterConfig.Providers.Olvm.OlvmAPIServer.CAConfigMap.Namespace}}"
    credentialsSecretName:
      name: ".ClusterConfig.Providers.Olvm.OlvmAPIServer.CredentialsSecret.Name}}"
      namespace: ".ClusterConfig.Providers.Olvm.OlvmAPIServer.CredentialsSecret.Namespace}}"
    insecureSkipTlsVerify: "{{.ClusterConfig.Providers.Olvm.OlvmAPIServer.InsecureSkipTLSVerify}}"
    serverURL: "{{.ClusterConfig.Providers.Olvm.OlvmAPIServer.ServerURL}}"

---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: "{{.ClusterConfig.Name}}-control-plane"
  namespace: "{{.ClusterConfig.Providers.Olvm.Namespace}}"
  annotations:
    controlplane.cluster.x-k8s.io/skip-kube-proxy: "true"
    controlplane.cluster.x-k8s.io/skip-coredns: "true"
spec:
  version: "{{.KubeVersions.Kubernetes}}"
  replicas: {{.ClusterConfig.ControlPlaneNodes}}
  machineTemplate:
    infrastructureRef:
      kind: OLVMMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1
      name: "{{.ClusterConfig.Name}}-control-plane"
      namespace: "{{.ClusterConfig.Providers.Olvm.Namespace}}"
  kubeadmConfigSpec:
    format: ignition
    ignition:
      variant: fcos
      version: 1.5.0
      containerLinuxConfig:
        additionalConfig: |
{{.ExtraConfigControlPlane}}
    clusterConfiguration:
      kubernetesVersion: {{.KubeVersions.Kubernetes}}
      imageRepository: container-registry.oracle.com/olcne
      apiServer:
        certSANs: [localhost, 127.0.0.1]
        extraArgs:
          tls-cipher-suites: {{.CipherSuite}}
      dns:
        imageRepository: container-registry.oracle.com/olcne
        imageTag: v1.11.1
      etcd:
        local:
          imageRepository: container-registry.oracle.com/olcne
          imageTag: 3.5.12
          extraArgs:
            cipher-suites: {{.CipherSuite}}
      networking: {}
      controllerManager:
        extraArgs:
          tls-cipher-suites: {{.CipherSuite}}
      scheduler:
        extraArgs:
          tls-cipher-suites: {{.CipherSuite}}
    initConfiguration:
      skipPhases:
        - "preflight"
        - "addon/kube-proxy"
        - "addon/coredns"
      patches:
        directory: /etc/ocne/ock/patches
      localAPIEndpoint:
        bindPort: {{.ClusterConfig.Providers.Olvm.LocalAPIEndpoint.BindPort}}
        advertiseAddress: "{{.ClusterConfig.Providers.Olvm.LocalAPIEndpoint.AdvertiseAddress}}"
      nodeRegistration:
        criSocket: /var/run/crio/crio.sock
        kubeletExtraArgs:
          volume-plugin-dir: "{{.VolumePluginDir}}"
          tls-cipher-suites: {{.CipherSuite}}
    joinConfiguration:
      skipPhases:
        - "preflight"
      patches:
        directory: /etc/ocne/ock/patches
      controlPlane:
        localAPIEndpoint:
          bindPort: {{.ClusterConfig.Providers.Olvm.LocalAPIEndpoint.BindPort}}
          advertiseAddress: "{{.ClusterConfig.Providers.Olvm.LocalAPIEndpoint.AdvertiseAddress}}"
      nodeRegistration:
        criSocket: /var/run/crio/crio.sock
        kubeletExtraArgs:
          volume-plugin-dir: "{{.VolumePluginDir}}"
          tls-cipher-suites: {{.CipherSuite}}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1
kind: OLVMMachineTemplate
metadata:
  name: "{{.ClusterConfig.Name}}-control-plane"
  namespace: "{{.ClusterConfig.Providers.Olvm.Namespace}}"
spec:
  template:
    spec:
      olvmOvirtClusterName:  "{{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmOvirtClusterName}}"
      vmTemplateName:  "{{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.VMTemplateName}}"
      olvmNetwork:
        networkName: "{{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmMachineNetwork.NetworkName}}"
        vnicName: "{{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmMachineNetwork.VnicName}}"
        vnicProfileName: "{{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmMachineNetwork.VnicProfileName}}"
      virtualMachine:
        memory: "{{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmVirtualMachine.Memory}}"
        network:
          gateway: "{{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmVirtualMachine.Network.Gateway}}"
          interface: "{{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmVirtualMachine.Network.Interface}}"
          interfaceType: "{{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmVirtualMachine.Network.InterfaceType}}"
          ipv4:
            cidrBlocks: "{{.IPV4CidrBlocks}}"
            subnet: "{{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmVirtualMachine.Network.IPV4.Subnet}}"
          ipv6:
           cidrBlocks: "{{.IPV6CidrBlocks}}"
           subnet: "{{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmVirtualMachine.Network.IPV6.Subnet}}"

        cpu:
          architecture: "{{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmVirtualMachine.Cpu.Architecture}}"
          topology:
            cores: {{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmVirtualMachine.Cpu.Topology.Cores}}
            sockets: {{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmVirtualMachine.Cpu.Topology.Sockets}}
            threads: {{.ClusterConfig.Providers.Olvm.ControlPlaneMachine.OlvmVirtualMachine.Cpu.Topology.Threads}}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "{{.ClusterConfig.Name}}-md-0"
  namespace: "{{.ClusterConfig.Providers.Olvm.Namespace}}"
spec:
  template:
    spec:
      format: ignition
      ignition:
        variant: fcos
        version: 1.5.0
        containerLinuxConfig:
          additionalConfig: |
  {{.ExtraConfigWorker}}
joinConfiguration:
  nodeRegistration:
    kubeletExtraArgs:
      volume-plugin-dir: "/var/lib/kubelet/volumeplugins"
      tls-cipher-suites: {{.CipherSuite}}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1
kind: OLVMMachineTemplate
metadata:
  name: "{{.ClusterConfig.Name}}-md-0"
  namespace: "{{.ClusterConfig.Providers.Olvm.Namespace}}"
spec:
  template:
    spec:
      olvmOvirtClusterName:  "{{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmOvirtClusterName}}"
      vmTemplateName:  "{{.ClusterConfig.Providers.Olvm.WorkerMachine.VMTemplateName}}"
      olvmNetwork:
        networkName: "{{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmMachineNetwork.NetworkName}}"
        vnicName: "{{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmMachineNetwork.VnicName}}"
        vnicProfileName: "{{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmMachineNetwork.VnicProfileName}}"
      virtualMachine:
        memory: "{{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmVirtualMachine.Memory}}"
        network:
          gateway: "{{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmVirtualMachine.Network.Gateway}}"
          interface: "{{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmVirtualMachine.Network.Interface}}"
          interfaceType: "{{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmVirtualMachine.Network.InterfaceType}}"
          ipv4:
            cidrBlocks: "{{.IPV4CidrBlocks}}"
            subnet: "{{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmVirtualMachine.Network.IPV4.Subnet}}"
          ipv6:
            cidrBlocks: "{{.IPV6CidrBlocks}}"
            subnet: "{{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmVirtualMachine.Network.IPV6.Subnet}}"

        cpu:
          architecture: "{{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmVirtualMachine.Cpu.Architecture}}"
          topology:
            cores: {{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmVirtualMachine.Cpu.Topology.Cores}}
            sockets: {{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmVirtualMachine.Cpu.Topology.Sockets}}
            threads: {{.ClusterConfig.Providers.Olvm.WorkerMachine.OlvmVirtualMachine.Cpu.Topology.Threads}}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "{{.ClusterConfig.Name}}-md-0"
  namespace: "{{.ClusterConfig.Providers.Olvm.Namespace}}"
spec:
  clusterName: "{{.ClusterConfig.Name}}"
  replicas: {{.ClusterConfig.WorkerNodes}}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "{{.ClusterConfig.Name}}"
      version: "{{.KubeVersions.Kubernetes}}"
      bootstrap:
        configRef:
          name: "{{.ClusterConfig.Name}}-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "{{.ClusterConfig.Name}}-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1
        kind: OLVMMachineTemplate
